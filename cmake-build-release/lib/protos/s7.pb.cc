// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: s7.proto

#include "s7.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
constexpr SnapSevenConfigResponse::SnapSevenConfigResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : errordesc_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , success_(false)
  , errorcode_(0){}
struct SnapSevenConfigResponseDefaultTypeInternal {
  constexpr SnapSevenConfigResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SnapSevenConfigResponseDefaultTypeInternal() {}
  union {
    SnapSevenConfigResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT SnapSevenConfigResponseDefaultTypeInternal _SnapSevenConfigResponse_default_instance_;
constexpr ConfigSnapSeven_PLCConfig_IoTag::ConfigSnapSeven_PLCConfig_IoTag(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : tagname_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , tagid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , tagtype_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , iotype_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , wordcount_(0)
  , bitcount_(0)
  , bytecount_(0)
  , interval_(0)
  , operation_(false){}
struct ConfigSnapSeven_PLCConfig_IoTagDefaultTypeInternal {
  constexpr ConfigSnapSeven_PLCConfig_IoTagDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ConfigSnapSeven_PLCConfig_IoTagDefaultTypeInternal() {}
  union {
    ConfigSnapSeven_PLCConfig_IoTag _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ConfigSnapSeven_PLCConfig_IoTagDefaultTypeInternal _ConfigSnapSeven_PLCConfig_IoTag_default_instance_;
constexpr ConfigSnapSeven_PLCConfig_DataBlockTag::ConfigSnapSeven_PLCConfig_DataBlockTag(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : tagname_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , tagid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , functioncode_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , count_(0)
  , parameter_(0)

  , startaddress_(0)
  , bitnumber_(0)
  , dbnumber_(0)
  , interval_(0)
  , operation_(false){}
struct ConfigSnapSeven_PLCConfig_DataBlockTagDefaultTypeInternal {
  constexpr ConfigSnapSeven_PLCConfig_DataBlockTagDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ConfigSnapSeven_PLCConfig_DataBlockTagDefaultTypeInternal() {}
  union {
    ConfigSnapSeven_PLCConfig_DataBlockTag _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ConfigSnapSeven_PLCConfig_DataBlockTagDefaultTypeInternal _ConfigSnapSeven_PLCConfig_DataBlockTag_default_instance_;
constexpr ConfigSnapSeven_PLCConfig_MemoryTag::ConfigSnapSeven_PLCConfig_MemoryTag(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : tagname_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , tagid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , functioncode_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , startaddress_(0)
  , varsize_(0)
  , interval_(0)
  , operation_(false){}
struct ConfigSnapSeven_PLCConfig_MemoryTagDefaultTypeInternal {
  constexpr ConfigSnapSeven_PLCConfig_MemoryTagDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ConfigSnapSeven_PLCConfig_MemoryTagDefaultTypeInternal() {}
  union {
    ConfigSnapSeven_PLCConfig_MemoryTag _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ConfigSnapSeven_PLCConfig_MemoryTagDefaultTypeInternal _ConfigSnapSeven_PLCConfig_MemoryTag_default_instance_;
constexpr ConfigSnapSeven_PLCConfig::ConfigSnapSeven_PLCConfig(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : iotag_()
  , datablocktag_()
  , memorytag_()
  , plcname_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , plcid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , plcaddress_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , plcip_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , plcport_(0){}
struct ConfigSnapSeven_PLCConfigDefaultTypeInternal {
  constexpr ConfigSnapSeven_PLCConfigDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ConfigSnapSeven_PLCConfigDefaultTypeInternal() {}
  union {
    ConfigSnapSeven_PLCConfig _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ConfigSnapSeven_PLCConfigDefaultTypeInternal _ConfigSnapSeven_PLCConfig_default_instance_;
constexpr ConfigSnapSeven::ConfigSnapSeven(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : plcconfig_(){}
struct ConfigSnapSevenDefaultTypeInternal {
  constexpr ConfigSnapSevenDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ConfigSnapSevenDefaultTypeInternal() {}
  union {
    ConfigSnapSeven _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ConfigSnapSevenDefaultTypeInternal _ConfigSnapSeven_default_instance_;
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_s7_2eproto[6];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_s7_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_s7_2eproto = nullptr;

const uint32_t TableStruct_s7_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::SnapSevenConfigResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::SnapSevenConfigResponse, success_),
  PROTOBUF_FIELD_OFFSET(::SnapSevenConfigResponse, errorcode_),
  PROTOBUF_FIELD_OFFSET(::SnapSevenConfigResponse, errordesc_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ConfigSnapSeven_PLCConfig_IoTag, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ConfigSnapSeven_PLCConfig_IoTag, tagname_),
  PROTOBUF_FIELD_OFFSET(::ConfigSnapSeven_PLCConfig_IoTag, tagid_),
  PROTOBUF_FIELD_OFFSET(::ConfigSnapSeven_PLCConfig_IoTag, tagtype_),
  PROTOBUF_FIELD_OFFSET(::ConfigSnapSeven_PLCConfig_IoTag, iotype_),
  PROTOBUF_FIELD_OFFSET(::ConfigSnapSeven_PLCConfig_IoTag, wordcount_),
  PROTOBUF_FIELD_OFFSET(::ConfigSnapSeven_PLCConfig_IoTag, bitcount_),
  PROTOBUF_FIELD_OFFSET(::ConfigSnapSeven_PLCConfig_IoTag, bytecount_),
  PROTOBUF_FIELD_OFFSET(::ConfigSnapSeven_PLCConfig_IoTag, interval_),
  PROTOBUF_FIELD_OFFSET(::ConfigSnapSeven_PLCConfig_IoTag, operation_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ConfigSnapSeven_PLCConfig_DataBlockTag, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ConfigSnapSeven_PLCConfig_DataBlockTag, tagname_),
  PROTOBUF_FIELD_OFFSET(::ConfigSnapSeven_PLCConfig_DataBlockTag, tagid_),
  PROTOBUF_FIELD_OFFSET(::ConfigSnapSeven_PLCConfig_DataBlockTag, functioncode_),
  PROTOBUF_FIELD_OFFSET(::ConfigSnapSeven_PLCConfig_DataBlockTag, count_),
  PROTOBUF_FIELD_OFFSET(::ConfigSnapSeven_PLCConfig_DataBlockTag, parameter_),
  PROTOBUF_FIELD_OFFSET(::ConfigSnapSeven_PLCConfig_DataBlockTag, startaddress_),
  PROTOBUF_FIELD_OFFSET(::ConfigSnapSeven_PLCConfig_DataBlockTag, bitnumber_),
  PROTOBUF_FIELD_OFFSET(::ConfigSnapSeven_PLCConfig_DataBlockTag, dbnumber_),
  PROTOBUF_FIELD_OFFSET(::ConfigSnapSeven_PLCConfig_DataBlockTag, interval_),
  PROTOBUF_FIELD_OFFSET(::ConfigSnapSeven_PLCConfig_DataBlockTag, operation_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ConfigSnapSeven_PLCConfig_MemoryTag, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ConfigSnapSeven_PLCConfig_MemoryTag, tagname_),
  PROTOBUF_FIELD_OFFSET(::ConfigSnapSeven_PLCConfig_MemoryTag, tagid_),
  PROTOBUF_FIELD_OFFSET(::ConfigSnapSeven_PLCConfig_MemoryTag, functioncode_),
  PROTOBUF_FIELD_OFFSET(::ConfigSnapSeven_PLCConfig_MemoryTag, startaddress_),
  PROTOBUF_FIELD_OFFSET(::ConfigSnapSeven_PLCConfig_MemoryTag, varsize_),
  PROTOBUF_FIELD_OFFSET(::ConfigSnapSeven_PLCConfig_MemoryTag, interval_),
  PROTOBUF_FIELD_OFFSET(::ConfigSnapSeven_PLCConfig_MemoryTag, operation_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ConfigSnapSeven_PLCConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ConfigSnapSeven_PLCConfig, plcname_),
  PROTOBUF_FIELD_OFFSET(::ConfigSnapSeven_PLCConfig, plcid_),
  PROTOBUF_FIELD_OFFSET(::ConfigSnapSeven_PLCConfig, plcaddress_),
  PROTOBUF_FIELD_OFFSET(::ConfigSnapSeven_PLCConfig, plcport_),
  PROTOBUF_FIELD_OFFSET(::ConfigSnapSeven_PLCConfig, plcip_),
  PROTOBUF_FIELD_OFFSET(::ConfigSnapSeven_PLCConfig, iotag_),
  PROTOBUF_FIELD_OFFSET(::ConfigSnapSeven_PLCConfig, datablocktag_),
  PROTOBUF_FIELD_OFFSET(::ConfigSnapSeven_PLCConfig, memorytag_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ConfigSnapSeven, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ConfigSnapSeven, plcconfig_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::SnapSevenConfigResponse)},
  { 9, -1, -1, sizeof(::ConfigSnapSeven_PLCConfig_IoTag)},
  { 24, -1, -1, sizeof(::ConfigSnapSeven_PLCConfig_DataBlockTag)},
  { 40, -1, -1, sizeof(::ConfigSnapSeven_PLCConfig_MemoryTag)},
  { 53, -1, -1, sizeof(::ConfigSnapSeven_PLCConfig)},
  { 67, -1, -1, sizeof(::ConfigSnapSeven)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_SnapSevenConfigResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_ConfigSnapSeven_PLCConfig_IoTag_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_ConfigSnapSeven_PLCConfig_DataBlockTag_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_ConfigSnapSeven_PLCConfig_MemoryTag_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_ConfigSnapSeven_PLCConfig_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_ConfigSnapSeven_default_instance_),
};

const char descriptor_table_protodef_s7_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\010s7.proto\"P\n\027SnapSevenConfigResponse\022\017\n"
  "\007Success\030\001 \001(\010\022\021\n\terrorCode\030\002 \001(\005\022\021\n\terr"
  "orDesc\030\003 \001(\t\"\340\006\n\017ConfigSnapSeven\022-\n\tpLCC"
  "onfig\030\001 \003(\0132\032.ConfigSnapSeven.PLCConfig\032"
  "\235\006\n\tPLCConfig\022\017\n\007plcName\030\001 \001(\t\022\r\n\005plcID\030"
  "\002 \001(\t\022\022\n\nplcAddress\030\003 \001(\t\022\017\n\007plcPort\030\004 \001"
  "(\005\022\r\n\005plcIp\030\005 \001(\t\022/\n\005iotag\030\006 \003(\0132 .Confi"
  "gSnapSeven.PLCConfig.IoTag\022=\n\014datablockt"
  "ag\030\007 \003(\0132\'.ConfigSnapSeven.PLCConfig.Dat"
  "aBlockTag\0227\n\tmemoryTag\030\010 \003(\0132$.ConfigSna"
  "pSeven.PLCConfig.MemoryTag\032\245\001\n\005IoTag\022\017\n\007"
  "tagName\030\001 \001(\t\022\r\n\005tagId\030\002 \001(\t\022\017\n\007tagType\030"
  "\003 \001(\t\022\016\n\006ioType\030\004 \001(\t\022\021\n\twordCount\030\005 \001(\005"
  "\022\020\n\010bitCount\030\006 \001(\005\022\021\n\tbyteCount\030\007 \001(\005\022\020\n"
  "\010interval\030\010 \001(\005\022\021\n\toperation\030\t \001(\010\032\332\001\n\014D"
  "ataBlockTag\022\017\n\007tagName\030\001 \001(\t\022\r\n\005tagId\030\002 "
  "\001(\t\022\024\n\014functionCode\030\003 \001(\t\022\r\n\005count\030\004 \001(\005"
  "\022%\n\tparameter\030\005 \001(\0162\022.ParameterDataType\022"
  "\024\n\014startAddress\030\006 \001(\005\022\021\n\tbitNumber\030\007 \001(\005"
  "\022\020\n\010dbNumber\030\010 \001(\005\022\020\n\010interval\030\t \001(\005\022\021\n\t"
  "operation\030\n \001(\010\032\215\001\n\tMemoryTag\022\017\n\007tagName"
  "\030\001 \001(\t\022\r\n\005tagId\030\002 \001(\t\022\024\n\014functionCode\030\003 "
  "\001(\t\022\024\n\014startAddress\030\004 \001(\005\022\017\n\007varSize\030\005 \001"
  "(\005\022\020\n\010interval\030\006 \001(\005\022\021\n\toperation\030\007 \001(\010*"
  "\240\001\n\021ParameterDataType\022\013\n\007BOOLEAN\020\000\022\010\n\004IN"
  "T8\020\001\022\t\n\005UINT8\020\002\022\t\n\005INT16\020\003\022\n\n\006UINT16\020\004\022\t"
  "\n\005INT32\020\005\022\n\n\006UINT32\020\006\022\t\n\005INT64\020\007\022\n\n\006UINT"
  "64\020\010\022\013\n\007FLOAT32\020\t\022\013\n\007FLOAT64\020\n\022\n\n\006STRING"
  "\020\0132`\n\025SystemSnapSevenConfig\022G\n\031SendSyste"
  "mSnapSevenConfig\022\020.ConfigSnapSeven\032\030.Sna"
  "pSevenConfigResponseb\006proto3"
  ;
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_s7_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_s7_2eproto = {
  false, false, 1228, descriptor_table_protodef_s7_2eproto, "s7.proto", 
  &descriptor_table_s7_2eproto_once, nullptr, 0, 6,
  schemas, file_default_instances, TableStruct_s7_2eproto::offsets,
  file_level_metadata_s7_2eproto, file_level_enum_descriptors_s7_2eproto, file_level_service_descriptors_s7_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_s7_2eproto_getter() {
  return &descriptor_table_s7_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_s7_2eproto(&descriptor_table_s7_2eproto);
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ParameterDataType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_s7_2eproto);
  return file_level_enum_descriptors_s7_2eproto[0];
}
bool ParameterDataType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
      return true;
    default:
      return false;
  }
}


// ===================================================================

class SnapSevenConfigResponse::_Internal {
 public:
};

SnapSevenConfigResponse::SnapSevenConfigResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:SnapSevenConfigResponse)
}
SnapSevenConfigResponse::SnapSevenConfigResponse(const SnapSevenConfigResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  errordesc_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    errordesc_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_errordesc().empty()) {
    errordesc_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_errordesc(), 
      GetArenaForAllocation());
  }
  ::memcpy(&success_, &from.success_,
    static_cast<size_t>(reinterpret_cast<char*>(&errorcode_) -
    reinterpret_cast<char*>(&success_)) + sizeof(errorcode_));
  // @@protoc_insertion_point(copy_constructor:SnapSevenConfigResponse)
}

inline void SnapSevenConfigResponse::SharedCtor() {
errordesc_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  errordesc_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&success_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&errorcode_) -
    reinterpret_cast<char*>(&success_)) + sizeof(errorcode_));
}

SnapSevenConfigResponse::~SnapSevenConfigResponse() {
  // @@protoc_insertion_point(destructor:SnapSevenConfigResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void SnapSevenConfigResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  errordesc_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void SnapSevenConfigResponse::ArenaDtor(void* object) {
  SnapSevenConfigResponse* _this = reinterpret_cast< SnapSevenConfigResponse* >(object);
  (void)_this;
}
void SnapSevenConfigResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SnapSevenConfigResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SnapSevenConfigResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:SnapSevenConfigResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  errordesc_.ClearToEmpty();
  ::memset(&success_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&errorcode_) -
      reinterpret_cast<char*>(&success_)) + sizeof(errorcode_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SnapSevenConfigResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool Success = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          success_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 errorCode = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          errorcode_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string errorDesc = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_errordesc();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "SnapSevenConfigResponse.errorDesc"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SnapSevenConfigResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SnapSevenConfigResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool Success = 1;
  if (this->_internal_success() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_success(), target);
  }

  // int32 errorCode = 2;
  if (this->_internal_errorcode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_errorcode(), target);
  }

  // string errorDesc = 3;
  if (!this->_internal_errordesc().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_errordesc().data(), static_cast<int>(this->_internal_errordesc().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "SnapSevenConfigResponse.errorDesc");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_errordesc(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SnapSevenConfigResponse)
  return target;
}

size_t SnapSevenConfigResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SnapSevenConfigResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string errorDesc = 3;
  if (!this->_internal_errordesc().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_errordesc());
  }

  // bool Success = 1;
  if (this->_internal_success() != 0) {
    total_size += 1 + 1;
  }

  // int32 errorCode = 2;
  if (this->_internal_errorcode() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_errorcode());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SnapSevenConfigResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    SnapSevenConfigResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SnapSevenConfigResponse::GetClassData() const { return &_class_data_; }

void SnapSevenConfigResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<SnapSevenConfigResponse *>(to)->MergeFrom(
      static_cast<const SnapSevenConfigResponse &>(from));
}


void SnapSevenConfigResponse::MergeFrom(const SnapSevenConfigResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SnapSevenConfigResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_errordesc().empty()) {
    _internal_set_errordesc(from._internal_errordesc());
  }
  if (from._internal_success() != 0) {
    _internal_set_success(from._internal_success());
  }
  if (from._internal_errorcode() != 0) {
    _internal_set_errorcode(from._internal_errorcode());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SnapSevenConfigResponse::CopyFrom(const SnapSevenConfigResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SnapSevenConfigResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SnapSevenConfigResponse::IsInitialized() const {
  return true;
}

void SnapSevenConfigResponse::InternalSwap(SnapSevenConfigResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &errordesc_, lhs_arena,
      &other->errordesc_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SnapSevenConfigResponse, errorcode_)
      + sizeof(SnapSevenConfigResponse::errorcode_)
      - PROTOBUF_FIELD_OFFSET(SnapSevenConfigResponse, success_)>(
          reinterpret_cast<char*>(&success_),
          reinterpret_cast<char*>(&other->success_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SnapSevenConfigResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_s7_2eproto_getter, &descriptor_table_s7_2eproto_once,
      file_level_metadata_s7_2eproto[0]);
}

// ===================================================================

class ConfigSnapSeven_PLCConfig_IoTag::_Internal {
 public:
};

ConfigSnapSeven_PLCConfig_IoTag::ConfigSnapSeven_PLCConfig_IoTag(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:ConfigSnapSeven.PLCConfig.IoTag)
}
ConfigSnapSeven_PLCConfig_IoTag::ConfigSnapSeven_PLCConfig_IoTag(const ConfigSnapSeven_PLCConfig_IoTag& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  tagname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    tagname_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_tagname().empty()) {
    tagname_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_tagname(), 
      GetArenaForAllocation());
  }
  tagid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    tagid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_tagid().empty()) {
    tagid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_tagid(), 
      GetArenaForAllocation());
  }
  tagtype_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    tagtype_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_tagtype().empty()) {
    tagtype_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_tagtype(), 
      GetArenaForAllocation());
  }
  iotype_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    iotype_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_iotype().empty()) {
    iotype_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_iotype(), 
      GetArenaForAllocation());
  }
  ::memcpy(&wordcount_, &from.wordcount_,
    static_cast<size_t>(reinterpret_cast<char*>(&operation_) -
    reinterpret_cast<char*>(&wordcount_)) + sizeof(operation_));
  // @@protoc_insertion_point(copy_constructor:ConfigSnapSeven.PLCConfig.IoTag)
}

inline void ConfigSnapSeven_PLCConfig_IoTag::SharedCtor() {
tagname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  tagname_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
tagid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  tagid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
tagtype_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  tagtype_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
iotype_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  iotype_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&wordcount_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&operation_) -
    reinterpret_cast<char*>(&wordcount_)) + sizeof(operation_));
}

ConfigSnapSeven_PLCConfig_IoTag::~ConfigSnapSeven_PLCConfig_IoTag() {
  // @@protoc_insertion_point(destructor:ConfigSnapSeven.PLCConfig.IoTag)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ConfigSnapSeven_PLCConfig_IoTag::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  tagname_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  tagid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  tagtype_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  iotype_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ConfigSnapSeven_PLCConfig_IoTag::ArenaDtor(void* object) {
  ConfigSnapSeven_PLCConfig_IoTag* _this = reinterpret_cast< ConfigSnapSeven_PLCConfig_IoTag* >(object);
  (void)_this;
}
void ConfigSnapSeven_PLCConfig_IoTag::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ConfigSnapSeven_PLCConfig_IoTag::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ConfigSnapSeven_PLCConfig_IoTag::Clear() {
// @@protoc_insertion_point(message_clear_start:ConfigSnapSeven.PLCConfig.IoTag)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tagname_.ClearToEmpty();
  tagid_.ClearToEmpty();
  tagtype_.ClearToEmpty();
  iotype_.ClearToEmpty();
  ::memset(&wordcount_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&operation_) -
      reinterpret_cast<char*>(&wordcount_)) + sizeof(operation_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ConfigSnapSeven_PLCConfig_IoTag::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string tagName = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_tagname();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ConfigSnapSeven.PLCConfig.IoTag.tagName"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string tagId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_tagid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ConfigSnapSeven.PLCConfig.IoTag.tagId"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string tagType = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_tagtype();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ConfigSnapSeven.PLCConfig.IoTag.tagType"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string ioType = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_iotype();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ConfigSnapSeven.PLCConfig.IoTag.ioType"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 wordCount = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          wordcount_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 bitCount = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          bitcount_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 byteCount = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 56)) {
          bytecount_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 interval = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 64)) {
          interval_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool operation = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 72)) {
          operation_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ConfigSnapSeven_PLCConfig_IoTag::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ConfigSnapSeven.PLCConfig.IoTag)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string tagName = 1;
  if (!this->_internal_tagname().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_tagname().data(), static_cast<int>(this->_internal_tagname().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ConfigSnapSeven.PLCConfig.IoTag.tagName");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_tagname(), target);
  }

  // string tagId = 2;
  if (!this->_internal_tagid().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_tagid().data(), static_cast<int>(this->_internal_tagid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ConfigSnapSeven.PLCConfig.IoTag.tagId");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_tagid(), target);
  }

  // string tagType = 3;
  if (!this->_internal_tagtype().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_tagtype().data(), static_cast<int>(this->_internal_tagtype().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ConfigSnapSeven.PLCConfig.IoTag.tagType");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_tagtype(), target);
  }

  // string ioType = 4;
  if (!this->_internal_iotype().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_iotype().data(), static_cast<int>(this->_internal_iotype().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ConfigSnapSeven.PLCConfig.IoTag.ioType");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_iotype(), target);
  }

  // int32 wordCount = 5;
  if (this->_internal_wordcount() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(5, this->_internal_wordcount(), target);
  }

  // int32 bitCount = 6;
  if (this->_internal_bitcount() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(6, this->_internal_bitcount(), target);
  }

  // int32 byteCount = 7;
  if (this->_internal_bytecount() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(7, this->_internal_bytecount(), target);
  }

  // int32 interval = 8;
  if (this->_internal_interval() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(8, this->_internal_interval(), target);
  }

  // bool operation = 9;
  if (this->_internal_operation() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(9, this->_internal_operation(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ConfigSnapSeven.PLCConfig.IoTag)
  return target;
}

size_t ConfigSnapSeven_PLCConfig_IoTag::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ConfigSnapSeven.PLCConfig.IoTag)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string tagName = 1;
  if (!this->_internal_tagname().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_tagname());
  }

  // string tagId = 2;
  if (!this->_internal_tagid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_tagid());
  }

  // string tagType = 3;
  if (!this->_internal_tagtype().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_tagtype());
  }

  // string ioType = 4;
  if (!this->_internal_iotype().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_iotype());
  }

  // int32 wordCount = 5;
  if (this->_internal_wordcount() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_wordcount());
  }

  // int32 bitCount = 6;
  if (this->_internal_bitcount() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_bitcount());
  }

  // int32 byteCount = 7;
  if (this->_internal_bytecount() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_bytecount());
  }

  // int32 interval = 8;
  if (this->_internal_interval() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_interval());
  }

  // bool operation = 9;
  if (this->_internal_operation() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ConfigSnapSeven_PLCConfig_IoTag::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ConfigSnapSeven_PLCConfig_IoTag::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ConfigSnapSeven_PLCConfig_IoTag::GetClassData() const { return &_class_data_; }

void ConfigSnapSeven_PLCConfig_IoTag::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ConfigSnapSeven_PLCConfig_IoTag *>(to)->MergeFrom(
      static_cast<const ConfigSnapSeven_PLCConfig_IoTag &>(from));
}


void ConfigSnapSeven_PLCConfig_IoTag::MergeFrom(const ConfigSnapSeven_PLCConfig_IoTag& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ConfigSnapSeven.PLCConfig.IoTag)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_tagname().empty()) {
    _internal_set_tagname(from._internal_tagname());
  }
  if (!from._internal_tagid().empty()) {
    _internal_set_tagid(from._internal_tagid());
  }
  if (!from._internal_tagtype().empty()) {
    _internal_set_tagtype(from._internal_tagtype());
  }
  if (!from._internal_iotype().empty()) {
    _internal_set_iotype(from._internal_iotype());
  }
  if (from._internal_wordcount() != 0) {
    _internal_set_wordcount(from._internal_wordcount());
  }
  if (from._internal_bitcount() != 0) {
    _internal_set_bitcount(from._internal_bitcount());
  }
  if (from._internal_bytecount() != 0) {
    _internal_set_bytecount(from._internal_bytecount());
  }
  if (from._internal_interval() != 0) {
    _internal_set_interval(from._internal_interval());
  }
  if (from._internal_operation() != 0) {
    _internal_set_operation(from._internal_operation());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ConfigSnapSeven_PLCConfig_IoTag::CopyFrom(const ConfigSnapSeven_PLCConfig_IoTag& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ConfigSnapSeven.PLCConfig.IoTag)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConfigSnapSeven_PLCConfig_IoTag::IsInitialized() const {
  return true;
}

void ConfigSnapSeven_PLCConfig_IoTag::InternalSwap(ConfigSnapSeven_PLCConfig_IoTag* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &tagname_, lhs_arena,
      &other->tagname_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &tagid_, lhs_arena,
      &other->tagid_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &tagtype_, lhs_arena,
      &other->tagtype_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &iotype_, lhs_arena,
      &other->iotype_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ConfigSnapSeven_PLCConfig_IoTag, operation_)
      + sizeof(ConfigSnapSeven_PLCConfig_IoTag::operation_)
      - PROTOBUF_FIELD_OFFSET(ConfigSnapSeven_PLCConfig_IoTag, wordcount_)>(
          reinterpret_cast<char*>(&wordcount_),
          reinterpret_cast<char*>(&other->wordcount_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ConfigSnapSeven_PLCConfig_IoTag::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_s7_2eproto_getter, &descriptor_table_s7_2eproto_once,
      file_level_metadata_s7_2eproto[1]);
}

// ===================================================================

class ConfigSnapSeven_PLCConfig_DataBlockTag::_Internal {
 public:
};

ConfigSnapSeven_PLCConfig_DataBlockTag::ConfigSnapSeven_PLCConfig_DataBlockTag(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:ConfigSnapSeven.PLCConfig.DataBlockTag)
}
ConfigSnapSeven_PLCConfig_DataBlockTag::ConfigSnapSeven_PLCConfig_DataBlockTag(const ConfigSnapSeven_PLCConfig_DataBlockTag& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  tagname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    tagname_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_tagname().empty()) {
    tagname_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_tagname(), 
      GetArenaForAllocation());
  }
  tagid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    tagid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_tagid().empty()) {
    tagid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_tagid(), 
      GetArenaForAllocation());
  }
  functioncode_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    functioncode_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_functioncode().empty()) {
    functioncode_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_functioncode(), 
      GetArenaForAllocation());
  }
  ::memcpy(&count_, &from.count_,
    static_cast<size_t>(reinterpret_cast<char*>(&operation_) -
    reinterpret_cast<char*>(&count_)) + sizeof(operation_));
  // @@protoc_insertion_point(copy_constructor:ConfigSnapSeven.PLCConfig.DataBlockTag)
}

inline void ConfigSnapSeven_PLCConfig_DataBlockTag::SharedCtor() {
tagname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  tagname_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
tagid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  tagid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
functioncode_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  functioncode_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&count_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&operation_) -
    reinterpret_cast<char*>(&count_)) + sizeof(operation_));
}

ConfigSnapSeven_PLCConfig_DataBlockTag::~ConfigSnapSeven_PLCConfig_DataBlockTag() {
  // @@protoc_insertion_point(destructor:ConfigSnapSeven.PLCConfig.DataBlockTag)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ConfigSnapSeven_PLCConfig_DataBlockTag::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  tagname_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  tagid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  functioncode_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ConfigSnapSeven_PLCConfig_DataBlockTag::ArenaDtor(void* object) {
  ConfigSnapSeven_PLCConfig_DataBlockTag* _this = reinterpret_cast< ConfigSnapSeven_PLCConfig_DataBlockTag* >(object);
  (void)_this;
}
void ConfigSnapSeven_PLCConfig_DataBlockTag::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ConfigSnapSeven_PLCConfig_DataBlockTag::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ConfigSnapSeven_PLCConfig_DataBlockTag::Clear() {
// @@protoc_insertion_point(message_clear_start:ConfigSnapSeven.PLCConfig.DataBlockTag)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tagname_.ClearToEmpty();
  tagid_.ClearToEmpty();
  functioncode_.ClearToEmpty();
  ::memset(&count_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&operation_) -
      reinterpret_cast<char*>(&count_)) + sizeof(operation_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ConfigSnapSeven_PLCConfig_DataBlockTag::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string tagName = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_tagname();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ConfigSnapSeven.PLCConfig.DataBlockTag.tagName"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string tagId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_tagid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ConfigSnapSeven.PLCConfig.DataBlockTag.tagId"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string functionCode = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_functioncode();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ConfigSnapSeven.PLCConfig.DataBlockTag.functionCode"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 count = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          count_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .ParameterDataType parameter = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_parameter(static_cast<::ParameterDataType>(val));
        } else
          goto handle_unusual;
        continue;
      // int32 startAddress = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          startaddress_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 bitNumber = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 56)) {
          bitnumber_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 dbNumber = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 64)) {
          dbnumber_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 interval = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 72)) {
          interval_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool operation = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 80)) {
          operation_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ConfigSnapSeven_PLCConfig_DataBlockTag::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ConfigSnapSeven.PLCConfig.DataBlockTag)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string tagName = 1;
  if (!this->_internal_tagname().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_tagname().data(), static_cast<int>(this->_internal_tagname().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ConfigSnapSeven.PLCConfig.DataBlockTag.tagName");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_tagname(), target);
  }

  // string tagId = 2;
  if (!this->_internal_tagid().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_tagid().data(), static_cast<int>(this->_internal_tagid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ConfigSnapSeven.PLCConfig.DataBlockTag.tagId");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_tagid(), target);
  }

  // string functionCode = 3;
  if (!this->_internal_functioncode().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_functioncode().data(), static_cast<int>(this->_internal_functioncode().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ConfigSnapSeven.PLCConfig.DataBlockTag.functionCode");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_functioncode(), target);
  }

  // int32 count = 4;
  if (this->_internal_count() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->_internal_count(), target);
  }

  // .ParameterDataType parameter = 5;
  if (this->_internal_parameter() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      5, this->_internal_parameter(), target);
  }

  // int32 startAddress = 6;
  if (this->_internal_startaddress() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(6, this->_internal_startaddress(), target);
  }

  // int32 bitNumber = 7;
  if (this->_internal_bitnumber() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(7, this->_internal_bitnumber(), target);
  }

  // int32 dbNumber = 8;
  if (this->_internal_dbnumber() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(8, this->_internal_dbnumber(), target);
  }

  // int32 interval = 9;
  if (this->_internal_interval() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(9, this->_internal_interval(), target);
  }

  // bool operation = 10;
  if (this->_internal_operation() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(10, this->_internal_operation(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ConfigSnapSeven.PLCConfig.DataBlockTag)
  return target;
}

size_t ConfigSnapSeven_PLCConfig_DataBlockTag::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ConfigSnapSeven.PLCConfig.DataBlockTag)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string tagName = 1;
  if (!this->_internal_tagname().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_tagname());
  }

  // string tagId = 2;
  if (!this->_internal_tagid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_tagid());
  }

  // string functionCode = 3;
  if (!this->_internal_functioncode().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_functioncode());
  }

  // int32 count = 4;
  if (this->_internal_count() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_count());
  }

  // .ParameterDataType parameter = 5;
  if (this->_internal_parameter() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_parameter());
  }

  // int32 startAddress = 6;
  if (this->_internal_startaddress() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_startaddress());
  }

  // int32 bitNumber = 7;
  if (this->_internal_bitnumber() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_bitnumber());
  }

  // int32 dbNumber = 8;
  if (this->_internal_dbnumber() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_dbnumber());
  }

  // int32 interval = 9;
  if (this->_internal_interval() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_interval());
  }

  // bool operation = 10;
  if (this->_internal_operation() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ConfigSnapSeven_PLCConfig_DataBlockTag::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ConfigSnapSeven_PLCConfig_DataBlockTag::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ConfigSnapSeven_PLCConfig_DataBlockTag::GetClassData() const { return &_class_data_; }

void ConfigSnapSeven_PLCConfig_DataBlockTag::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ConfigSnapSeven_PLCConfig_DataBlockTag *>(to)->MergeFrom(
      static_cast<const ConfigSnapSeven_PLCConfig_DataBlockTag &>(from));
}


void ConfigSnapSeven_PLCConfig_DataBlockTag::MergeFrom(const ConfigSnapSeven_PLCConfig_DataBlockTag& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ConfigSnapSeven.PLCConfig.DataBlockTag)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_tagname().empty()) {
    _internal_set_tagname(from._internal_tagname());
  }
  if (!from._internal_tagid().empty()) {
    _internal_set_tagid(from._internal_tagid());
  }
  if (!from._internal_functioncode().empty()) {
    _internal_set_functioncode(from._internal_functioncode());
  }
  if (from._internal_count() != 0) {
    _internal_set_count(from._internal_count());
  }
  if (from._internal_parameter() != 0) {
    _internal_set_parameter(from._internal_parameter());
  }
  if (from._internal_startaddress() != 0) {
    _internal_set_startaddress(from._internal_startaddress());
  }
  if (from._internal_bitnumber() != 0) {
    _internal_set_bitnumber(from._internal_bitnumber());
  }
  if (from._internal_dbnumber() != 0) {
    _internal_set_dbnumber(from._internal_dbnumber());
  }
  if (from._internal_interval() != 0) {
    _internal_set_interval(from._internal_interval());
  }
  if (from._internal_operation() != 0) {
    _internal_set_operation(from._internal_operation());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ConfigSnapSeven_PLCConfig_DataBlockTag::CopyFrom(const ConfigSnapSeven_PLCConfig_DataBlockTag& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ConfigSnapSeven.PLCConfig.DataBlockTag)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConfigSnapSeven_PLCConfig_DataBlockTag::IsInitialized() const {
  return true;
}

void ConfigSnapSeven_PLCConfig_DataBlockTag::InternalSwap(ConfigSnapSeven_PLCConfig_DataBlockTag* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &tagname_, lhs_arena,
      &other->tagname_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &tagid_, lhs_arena,
      &other->tagid_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &functioncode_, lhs_arena,
      &other->functioncode_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ConfigSnapSeven_PLCConfig_DataBlockTag, operation_)
      + sizeof(ConfigSnapSeven_PLCConfig_DataBlockTag::operation_)
      - PROTOBUF_FIELD_OFFSET(ConfigSnapSeven_PLCConfig_DataBlockTag, count_)>(
          reinterpret_cast<char*>(&count_),
          reinterpret_cast<char*>(&other->count_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ConfigSnapSeven_PLCConfig_DataBlockTag::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_s7_2eproto_getter, &descriptor_table_s7_2eproto_once,
      file_level_metadata_s7_2eproto[2]);
}

// ===================================================================

class ConfigSnapSeven_PLCConfig_MemoryTag::_Internal {
 public:
};

ConfigSnapSeven_PLCConfig_MemoryTag::ConfigSnapSeven_PLCConfig_MemoryTag(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:ConfigSnapSeven.PLCConfig.MemoryTag)
}
ConfigSnapSeven_PLCConfig_MemoryTag::ConfigSnapSeven_PLCConfig_MemoryTag(const ConfigSnapSeven_PLCConfig_MemoryTag& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  tagname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    tagname_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_tagname().empty()) {
    tagname_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_tagname(), 
      GetArenaForAllocation());
  }
  tagid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    tagid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_tagid().empty()) {
    tagid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_tagid(), 
      GetArenaForAllocation());
  }
  functioncode_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    functioncode_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_functioncode().empty()) {
    functioncode_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_functioncode(), 
      GetArenaForAllocation());
  }
  ::memcpy(&startaddress_, &from.startaddress_,
    static_cast<size_t>(reinterpret_cast<char*>(&operation_) -
    reinterpret_cast<char*>(&startaddress_)) + sizeof(operation_));
  // @@protoc_insertion_point(copy_constructor:ConfigSnapSeven.PLCConfig.MemoryTag)
}

inline void ConfigSnapSeven_PLCConfig_MemoryTag::SharedCtor() {
tagname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  tagname_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
tagid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  tagid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
functioncode_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  functioncode_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&startaddress_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&operation_) -
    reinterpret_cast<char*>(&startaddress_)) + sizeof(operation_));
}

ConfigSnapSeven_PLCConfig_MemoryTag::~ConfigSnapSeven_PLCConfig_MemoryTag() {
  // @@protoc_insertion_point(destructor:ConfigSnapSeven.PLCConfig.MemoryTag)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ConfigSnapSeven_PLCConfig_MemoryTag::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  tagname_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  tagid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  functioncode_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ConfigSnapSeven_PLCConfig_MemoryTag::ArenaDtor(void* object) {
  ConfigSnapSeven_PLCConfig_MemoryTag* _this = reinterpret_cast< ConfigSnapSeven_PLCConfig_MemoryTag* >(object);
  (void)_this;
}
void ConfigSnapSeven_PLCConfig_MemoryTag::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ConfigSnapSeven_PLCConfig_MemoryTag::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ConfigSnapSeven_PLCConfig_MemoryTag::Clear() {
// @@protoc_insertion_point(message_clear_start:ConfigSnapSeven.PLCConfig.MemoryTag)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tagname_.ClearToEmpty();
  tagid_.ClearToEmpty();
  functioncode_.ClearToEmpty();
  ::memset(&startaddress_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&operation_) -
      reinterpret_cast<char*>(&startaddress_)) + sizeof(operation_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ConfigSnapSeven_PLCConfig_MemoryTag::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string tagName = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_tagname();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ConfigSnapSeven.PLCConfig.MemoryTag.tagName"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string tagId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_tagid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ConfigSnapSeven.PLCConfig.MemoryTag.tagId"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string functionCode = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_functioncode();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ConfigSnapSeven.PLCConfig.MemoryTag.functionCode"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 startAddress = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          startaddress_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 varSize = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          varsize_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 interval = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          interval_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool operation = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 56)) {
          operation_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ConfigSnapSeven_PLCConfig_MemoryTag::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ConfigSnapSeven.PLCConfig.MemoryTag)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string tagName = 1;
  if (!this->_internal_tagname().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_tagname().data(), static_cast<int>(this->_internal_tagname().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ConfigSnapSeven.PLCConfig.MemoryTag.tagName");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_tagname(), target);
  }

  // string tagId = 2;
  if (!this->_internal_tagid().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_tagid().data(), static_cast<int>(this->_internal_tagid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ConfigSnapSeven.PLCConfig.MemoryTag.tagId");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_tagid(), target);
  }

  // string functionCode = 3;
  if (!this->_internal_functioncode().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_functioncode().data(), static_cast<int>(this->_internal_functioncode().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ConfigSnapSeven.PLCConfig.MemoryTag.functionCode");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_functioncode(), target);
  }

  // int32 startAddress = 4;
  if (this->_internal_startaddress() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->_internal_startaddress(), target);
  }

  // int32 varSize = 5;
  if (this->_internal_varsize() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(5, this->_internal_varsize(), target);
  }

  // int32 interval = 6;
  if (this->_internal_interval() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(6, this->_internal_interval(), target);
  }

  // bool operation = 7;
  if (this->_internal_operation() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(7, this->_internal_operation(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ConfigSnapSeven.PLCConfig.MemoryTag)
  return target;
}

size_t ConfigSnapSeven_PLCConfig_MemoryTag::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ConfigSnapSeven.PLCConfig.MemoryTag)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string tagName = 1;
  if (!this->_internal_tagname().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_tagname());
  }

  // string tagId = 2;
  if (!this->_internal_tagid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_tagid());
  }

  // string functionCode = 3;
  if (!this->_internal_functioncode().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_functioncode());
  }

  // int32 startAddress = 4;
  if (this->_internal_startaddress() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_startaddress());
  }

  // int32 varSize = 5;
  if (this->_internal_varsize() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_varsize());
  }

  // int32 interval = 6;
  if (this->_internal_interval() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_interval());
  }

  // bool operation = 7;
  if (this->_internal_operation() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ConfigSnapSeven_PLCConfig_MemoryTag::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ConfigSnapSeven_PLCConfig_MemoryTag::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ConfigSnapSeven_PLCConfig_MemoryTag::GetClassData() const { return &_class_data_; }

void ConfigSnapSeven_PLCConfig_MemoryTag::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ConfigSnapSeven_PLCConfig_MemoryTag *>(to)->MergeFrom(
      static_cast<const ConfigSnapSeven_PLCConfig_MemoryTag &>(from));
}


void ConfigSnapSeven_PLCConfig_MemoryTag::MergeFrom(const ConfigSnapSeven_PLCConfig_MemoryTag& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ConfigSnapSeven.PLCConfig.MemoryTag)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_tagname().empty()) {
    _internal_set_tagname(from._internal_tagname());
  }
  if (!from._internal_tagid().empty()) {
    _internal_set_tagid(from._internal_tagid());
  }
  if (!from._internal_functioncode().empty()) {
    _internal_set_functioncode(from._internal_functioncode());
  }
  if (from._internal_startaddress() != 0) {
    _internal_set_startaddress(from._internal_startaddress());
  }
  if (from._internal_varsize() != 0) {
    _internal_set_varsize(from._internal_varsize());
  }
  if (from._internal_interval() != 0) {
    _internal_set_interval(from._internal_interval());
  }
  if (from._internal_operation() != 0) {
    _internal_set_operation(from._internal_operation());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ConfigSnapSeven_PLCConfig_MemoryTag::CopyFrom(const ConfigSnapSeven_PLCConfig_MemoryTag& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ConfigSnapSeven.PLCConfig.MemoryTag)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConfigSnapSeven_PLCConfig_MemoryTag::IsInitialized() const {
  return true;
}

void ConfigSnapSeven_PLCConfig_MemoryTag::InternalSwap(ConfigSnapSeven_PLCConfig_MemoryTag* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &tagname_, lhs_arena,
      &other->tagname_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &tagid_, lhs_arena,
      &other->tagid_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &functioncode_, lhs_arena,
      &other->functioncode_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ConfigSnapSeven_PLCConfig_MemoryTag, operation_)
      + sizeof(ConfigSnapSeven_PLCConfig_MemoryTag::operation_)
      - PROTOBUF_FIELD_OFFSET(ConfigSnapSeven_PLCConfig_MemoryTag, startaddress_)>(
          reinterpret_cast<char*>(&startaddress_),
          reinterpret_cast<char*>(&other->startaddress_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ConfigSnapSeven_PLCConfig_MemoryTag::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_s7_2eproto_getter, &descriptor_table_s7_2eproto_once,
      file_level_metadata_s7_2eproto[3]);
}

// ===================================================================

class ConfigSnapSeven_PLCConfig::_Internal {
 public:
};

ConfigSnapSeven_PLCConfig::ConfigSnapSeven_PLCConfig(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  iotag_(arena),
  datablocktag_(arena),
  memorytag_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:ConfigSnapSeven.PLCConfig)
}
ConfigSnapSeven_PLCConfig::ConfigSnapSeven_PLCConfig(const ConfigSnapSeven_PLCConfig& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      iotag_(from.iotag_),
      datablocktag_(from.datablocktag_),
      memorytag_(from.memorytag_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  plcname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    plcname_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_plcname().empty()) {
    plcname_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_plcname(), 
      GetArenaForAllocation());
  }
  plcid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    plcid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_plcid().empty()) {
    plcid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_plcid(), 
      GetArenaForAllocation());
  }
  plcaddress_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    plcaddress_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_plcaddress().empty()) {
    plcaddress_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_plcaddress(), 
      GetArenaForAllocation());
  }
  plcip_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    plcip_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_plcip().empty()) {
    plcip_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_plcip(), 
      GetArenaForAllocation());
  }
  plcport_ = from.plcport_;
  // @@protoc_insertion_point(copy_constructor:ConfigSnapSeven.PLCConfig)
}

inline void ConfigSnapSeven_PLCConfig::SharedCtor() {
plcname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  plcname_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
plcid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  plcid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
plcaddress_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  plcaddress_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
plcip_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  plcip_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
plcport_ = 0;
}

ConfigSnapSeven_PLCConfig::~ConfigSnapSeven_PLCConfig() {
  // @@protoc_insertion_point(destructor:ConfigSnapSeven.PLCConfig)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ConfigSnapSeven_PLCConfig::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  plcname_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  plcid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  plcaddress_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  plcip_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ConfigSnapSeven_PLCConfig::ArenaDtor(void* object) {
  ConfigSnapSeven_PLCConfig* _this = reinterpret_cast< ConfigSnapSeven_PLCConfig* >(object);
  (void)_this;
}
void ConfigSnapSeven_PLCConfig::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ConfigSnapSeven_PLCConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ConfigSnapSeven_PLCConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:ConfigSnapSeven.PLCConfig)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  iotag_.Clear();
  datablocktag_.Clear();
  memorytag_.Clear();
  plcname_.ClearToEmpty();
  plcid_.ClearToEmpty();
  plcaddress_.ClearToEmpty();
  plcip_.ClearToEmpty();
  plcport_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ConfigSnapSeven_PLCConfig::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string plcName = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_plcname();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ConfigSnapSeven.PLCConfig.plcName"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string plcID = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_plcid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ConfigSnapSeven.PLCConfig.plcID"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string plcAddress = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_plcaddress();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ConfigSnapSeven.PLCConfig.plcAddress"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 plcPort = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          plcport_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string plcIp = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_plcip();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ConfigSnapSeven.PLCConfig.plcIp"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .ConfigSnapSeven.PLCConfig.IoTag iotag = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_iotag(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<50>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .ConfigSnapSeven.PLCConfig.DataBlockTag datablocktag = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_datablocktag(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<58>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .ConfigSnapSeven.PLCConfig.MemoryTag memoryTag = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_memorytag(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<66>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ConfigSnapSeven_PLCConfig::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ConfigSnapSeven.PLCConfig)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string plcName = 1;
  if (!this->_internal_plcname().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_plcname().data(), static_cast<int>(this->_internal_plcname().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ConfigSnapSeven.PLCConfig.plcName");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_plcname(), target);
  }

  // string plcID = 2;
  if (!this->_internal_plcid().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_plcid().data(), static_cast<int>(this->_internal_plcid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ConfigSnapSeven.PLCConfig.plcID");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_plcid(), target);
  }

  // string plcAddress = 3;
  if (!this->_internal_plcaddress().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_plcaddress().data(), static_cast<int>(this->_internal_plcaddress().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ConfigSnapSeven.PLCConfig.plcAddress");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_plcaddress(), target);
  }

  // int32 plcPort = 4;
  if (this->_internal_plcport() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->_internal_plcport(), target);
  }

  // string plcIp = 5;
  if (!this->_internal_plcip().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_plcip().data(), static_cast<int>(this->_internal_plcip().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ConfigSnapSeven.PLCConfig.plcIp");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_plcip(), target);
  }

  // repeated .ConfigSnapSeven.PLCConfig.IoTag iotag = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_iotag_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(6, this->_internal_iotag(i), target, stream);
  }

  // repeated .ConfigSnapSeven.PLCConfig.DataBlockTag datablocktag = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_datablocktag_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(7, this->_internal_datablocktag(i), target, stream);
  }

  // repeated .ConfigSnapSeven.PLCConfig.MemoryTag memoryTag = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_memorytag_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(8, this->_internal_memorytag(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ConfigSnapSeven.PLCConfig)
  return target;
}

size_t ConfigSnapSeven_PLCConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ConfigSnapSeven.PLCConfig)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ConfigSnapSeven.PLCConfig.IoTag iotag = 6;
  total_size += 1UL * this->_internal_iotag_size();
  for (const auto& msg : this->iotag_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .ConfigSnapSeven.PLCConfig.DataBlockTag datablocktag = 7;
  total_size += 1UL * this->_internal_datablocktag_size();
  for (const auto& msg : this->datablocktag_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .ConfigSnapSeven.PLCConfig.MemoryTag memoryTag = 8;
  total_size += 1UL * this->_internal_memorytag_size();
  for (const auto& msg : this->memorytag_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string plcName = 1;
  if (!this->_internal_plcname().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_plcname());
  }

  // string plcID = 2;
  if (!this->_internal_plcid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_plcid());
  }

  // string plcAddress = 3;
  if (!this->_internal_plcaddress().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_plcaddress());
  }

  // string plcIp = 5;
  if (!this->_internal_plcip().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_plcip());
  }

  // int32 plcPort = 4;
  if (this->_internal_plcport() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_plcport());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ConfigSnapSeven_PLCConfig::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ConfigSnapSeven_PLCConfig::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ConfigSnapSeven_PLCConfig::GetClassData() const { return &_class_data_; }

void ConfigSnapSeven_PLCConfig::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ConfigSnapSeven_PLCConfig *>(to)->MergeFrom(
      static_cast<const ConfigSnapSeven_PLCConfig &>(from));
}


void ConfigSnapSeven_PLCConfig::MergeFrom(const ConfigSnapSeven_PLCConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ConfigSnapSeven.PLCConfig)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  iotag_.MergeFrom(from.iotag_);
  datablocktag_.MergeFrom(from.datablocktag_);
  memorytag_.MergeFrom(from.memorytag_);
  if (!from._internal_plcname().empty()) {
    _internal_set_plcname(from._internal_plcname());
  }
  if (!from._internal_plcid().empty()) {
    _internal_set_plcid(from._internal_plcid());
  }
  if (!from._internal_plcaddress().empty()) {
    _internal_set_plcaddress(from._internal_plcaddress());
  }
  if (!from._internal_plcip().empty()) {
    _internal_set_plcip(from._internal_plcip());
  }
  if (from._internal_plcport() != 0) {
    _internal_set_plcport(from._internal_plcport());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ConfigSnapSeven_PLCConfig::CopyFrom(const ConfigSnapSeven_PLCConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ConfigSnapSeven.PLCConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConfigSnapSeven_PLCConfig::IsInitialized() const {
  return true;
}

void ConfigSnapSeven_PLCConfig::InternalSwap(ConfigSnapSeven_PLCConfig* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  iotag_.InternalSwap(&other->iotag_);
  datablocktag_.InternalSwap(&other->datablocktag_);
  memorytag_.InternalSwap(&other->memorytag_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &plcname_, lhs_arena,
      &other->plcname_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &plcid_, lhs_arena,
      &other->plcid_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &plcaddress_, lhs_arena,
      &other->plcaddress_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &plcip_, lhs_arena,
      &other->plcip_, rhs_arena
  );
  swap(plcport_, other->plcport_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ConfigSnapSeven_PLCConfig::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_s7_2eproto_getter, &descriptor_table_s7_2eproto_once,
      file_level_metadata_s7_2eproto[4]);
}

// ===================================================================

class ConfigSnapSeven::_Internal {
 public:
};

ConfigSnapSeven::ConfigSnapSeven(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  plcconfig_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:ConfigSnapSeven)
}
ConfigSnapSeven::ConfigSnapSeven(const ConfigSnapSeven& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      plcconfig_(from.plcconfig_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ConfigSnapSeven)
}

inline void ConfigSnapSeven::SharedCtor() {
}

ConfigSnapSeven::~ConfigSnapSeven() {
  // @@protoc_insertion_point(destructor:ConfigSnapSeven)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ConfigSnapSeven::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ConfigSnapSeven::ArenaDtor(void* object) {
  ConfigSnapSeven* _this = reinterpret_cast< ConfigSnapSeven* >(object);
  (void)_this;
}
void ConfigSnapSeven::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ConfigSnapSeven::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ConfigSnapSeven::Clear() {
// @@protoc_insertion_point(message_clear_start:ConfigSnapSeven)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  plcconfig_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ConfigSnapSeven::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .ConfigSnapSeven.PLCConfig pLCConfig = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_plcconfig(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ConfigSnapSeven::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ConfigSnapSeven)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ConfigSnapSeven.PLCConfig pLCConfig = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_plcconfig_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_plcconfig(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ConfigSnapSeven)
  return target;
}

size_t ConfigSnapSeven::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ConfigSnapSeven)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ConfigSnapSeven.PLCConfig pLCConfig = 1;
  total_size += 1UL * this->_internal_plcconfig_size();
  for (const auto& msg : this->plcconfig_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ConfigSnapSeven::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ConfigSnapSeven::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ConfigSnapSeven::GetClassData() const { return &_class_data_; }

void ConfigSnapSeven::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ConfigSnapSeven *>(to)->MergeFrom(
      static_cast<const ConfigSnapSeven &>(from));
}


void ConfigSnapSeven::MergeFrom(const ConfigSnapSeven& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ConfigSnapSeven)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  plcconfig_.MergeFrom(from.plcconfig_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ConfigSnapSeven::CopyFrom(const ConfigSnapSeven& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ConfigSnapSeven)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConfigSnapSeven::IsInitialized() const {
  return true;
}

void ConfigSnapSeven::InternalSwap(ConfigSnapSeven* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  plcconfig_.InternalSwap(&other->plcconfig_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ConfigSnapSeven::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_s7_2eproto_getter, &descriptor_table_s7_2eproto_once,
      file_level_metadata_s7_2eproto[5]);
}

// @@protoc_insertion_point(namespace_scope)
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::SnapSevenConfigResponse* Arena::CreateMaybeMessage< ::SnapSevenConfigResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::SnapSevenConfigResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::ConfigSnapSeven_PLCConfig_IoTag* Arena::CreateMaybeMessage< ::ConfigSnapSeven_PLCConfig_IoTag >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ConfigSnapSeven_PLCConfig_IoTag >(arena);
}
template<> PROTOBUF_NOINLINE ::ConfigSnapSeven_PLCConfig_DataBlockTag* Arena::CreateMaybeMessage< ::ConfigSnapSeven_PLCConfig_DataBlockTag >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ConfigSnapSeven_PLCConfig_DataBlockTag >(arena);
}
template<> PROTOBUF_NOINLINE ::ConfigSnapSeven_PLCConfig_MemoryTag* Arena::CreateMaybeMessage< ::ConfigSnapSeven_PLCConfig_MemoryTag >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ConfigSnapSeven_PLCConfig_MemoryTag >(arena);
}
template<> PROTOBUF_NOINLINE ::ConfigSnapSeven_PLCConfig* Arena::CreateMaybeMessage< ::ConfigSnapSeven_PLCConfig >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ConfigSnapSeven_PLCConfig >(arena);
}
template<> PROTOBUF_NOINLINE ::ConfigSnapSeven* Arena::CreateMaybeMessage< ::ConfigSnapSeven >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ConfigSnapSeven >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
